defaults:
  - model: conformer
  - writer: wandb
  - metrics: ArgMax_BeamSearch
  - datasets: train_clean_360
  - dataloader: kaggle
  - transforms: basic
  - text_encoder: BpeEncoder
  - _self_
optimizer:
  _target_: torch.optim.AdamW
  lr: 1e-4
  betas: [0.9, 0.98]
  weight_decay: 1e-6
  eps: 1e-9
lr_scheduler:
  _target_: torch.optim.lr_scheduler.OneCycleLR
  max_lr: 0.0042
  pct_start: 0.15
  epochs: 100 
  anneal_strategy: cos
loss_function:
  _target_: src.loss.CTCLossWrapper
trainer:
  log_step: 50
  n_epochs: 12
  # epoch_len: 100
  device_tensors: ["spectrogram", "text_encoded"] # which tensors should be on device (ex. GPU)
  resume_from: null # null or path to the checkpoint dir with *.pth and config.yaml
  device: "cuda:0" # device name or "auto"
  override: False # if True, will override the previous run with the same name
  monitor: "min test_WER_(BeamSearch)" # "off" or "max/min metric_name", i.e. our goal is to maximize/minimize metric
  save_period: 1 # checkpoint each save_period epochs in addition to the best epoch
  early_stop: ${trainer.n_epochs} # epochs for early stopping
  save_dir: "saved"
  seed: 1
  grad_acum: 1
  sample_rate: ${transforms.instance_transforms.train.get_spectrogram.sample_rate}
  show_augs: False
  max_grad_norm: 5.0